# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-04 20:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import roadmap.models
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0019_delete_filter'),
        ('wagtailcore', '0040_page_draft_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of someone to contact. Ex: Sharon Smith', max_length=255)),
                ('location', models.CharField(blank=True, help_text='An address for where this person works', max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=16)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('short_description', models.CharField(help_text='A short preview of what the page is about', max_length=75)),
                ('page_body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('checklist_instructions', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Specific instructions provided when a user prints the page. Keep it short!')),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='roadmap.Contact')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_body', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='The main content of the page, above the list of steps and form')),
                ('form_submission_message', models.CharField(default='Based on your choices we suggest looking at the following:', help_text='The text that is shown to the user after they make a form submissiom', max_length=255)),
                ('question', models.CharField(blank=True, help_text='The question for the form on the page (optional)', max_length=255)),
                ('choices', wagtail.wagtailcore.fields.StreamField((('label', wagtail.wagtailcore.blocks.CharBlock(required=True)),), blank=True, null=True)),
                ('has_strict_rules', models.BooleanField(default=False, help_text='If the rule definitions are strict it will ONLY display results that match the exact answers (instead of the union of the answers)')),
                ('rules', wagtail.wagtailcore.fields.StreamField((('rule', wagtail.wagtailcore.blocks.StructBlock((('name', roadmap.models.ChoiceRulesBlock()), ('pages', wagtail.wagtailcore.blocks.ListBlock(wagtail.wagtailcore.blocks.PageChooserBlock())), ('override', wagtail.wagtailcore.blocks.BooleanBlock(default=False, required=False))))),), blank=True, default=[])),
                ('default_steps', wagtail.wagtailcore.fields.StreamField((('page', wagtail.wagtailcore.blocks.PageChooserBlock()),), blank=True, default=[], help_text='The steps to show if someone submits a form with answers that are not covered by the rules')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
